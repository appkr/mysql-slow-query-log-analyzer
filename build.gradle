plugins {
    id 'java-library'
    id 'idea'
    id 'com.avast.gradle.docker-compose' version "${dockerComposeVersion}"
    id 'com.diffplug.spotless' version "${spotlessVersion}" apply false
    id 'org.springframework.boot' version "${springBootVersion}" apply false
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}" apply false
    id 'io.freefair.lombok' version "${lombokVersion}" apply false
    id 'com.gorylenko.gradle-git-properties' version "${gitPropertiesVersion}" apply false
}

wrapper {
    gradleVersion = '7.6.1'
}

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'idea'

    group = 'dev.appkr'
    version = project.version

    repositories {
        mavenCentral()
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }
}

subprojects {
    apply plugin: 'com.diffplug.spotless'
    apply from: '../gradle/publishing.gradle'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude module: 'junit-vintage-engine'
            exclude module: 'junit'
        }
    }

    test {
        useJUnitPlatform()
        systemProperty('spring.profiles.active', 'test')
        systemProperty('user.timezone', 'Asia/Seoul')
    }

    spotless {
        encoding 'UTF-8'
        java {
            targetExclude("**/build/**")
            importOrder()
            removeUnusedImports()
            endWithNewline()
        }
    }

    compileJava.dependsOn('spotlessApply')
}

def dockerComposePath = System.getProperty('os.arch').equals('aarch64')
        ? 'docker/compose-arm.yaml' : 'docker/compose-intel.yaml'
dockerCompose {
    useComposeFiles = [dockerComposePath]
}
